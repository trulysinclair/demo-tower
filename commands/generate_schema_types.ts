import { BaseCommand } from '@adonisjs/core/ace'
import type { CommandOptions } from '@adonisjs/core/types/ace'
import snakeCase from 'lodash/snakeCase.js'
import { existsSync } from 'node:fs'
import { writeFile } from 'node:fs/promises'
import { fileURLToPath } from 'node:url'
import openapiTS, { astToString } from 'openapi-typescript'

export const COMMENT_HEADER = `/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

`

export default class GenerateSchemaTypes extends BaseCommand {
  static commandName = 'generate:schema-types'
  static description = 'Generate the TypeScript definitions for the XSI schemas'

  static options: CommandOptions = {}

  async run() {
    const schemas = ['broadworks-xsi-actions', 'broadworks-xsi-events']

    for (const schema of schemas) {
      const schemaFileLocation = new URL(`../resources/${schema}.yml`, import.meta.url)

      if (!existsSync(fileURLToPath(schemaFileLocation)))
        throw new Error(`${fileURLToPath(schemaFileLocation)} does not exist`)

      this.logger.info(`Generating types for ${schema}.yml`)
      const ast = await openapiTS(schemaFileLocation, {})
      const contents = astToString(ast)

      await writeFile(`types/${snakeCase(schema)}.schema.ts`, `${COMMENT_HEADER}${contents}`)
    }
  }
}
